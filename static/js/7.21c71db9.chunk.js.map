{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hoc/WithAuthRedirect.tsx","images/emptyUser.png","components/common/Paginator/Paginator.tsx","components/common/Paginator/Paginator.module.css","components/MainWrapper/Users/UserPage.module.css","components/MainWrapper/Users/User/User.module.css","components/MainWrapper/Users/User/User.tsx","components/MainWrapper/Users/UsersPage.tsx","components/MainWrapper/Users/UserPage.container.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","Paginator","React","memo","totalCount","portionSize","currentPage","onPageChanged","portionNumber","changePortionNumber","pagesCount","Math","ceil","leftPortionPageNumber","rightPortionPageNumber","pages","mappedPages","filter","p","map","className","style","activeNumber","onClick","normalNumber","left","right","module","exports","User","user","emptyPhoto","isRequestSendUsersId","followCallBack","unFollowCallBack","toDialog","photoZone","PATH","PROFILE","id","src","photos","small","alt","name","followed","disabled","some","FormattedMessage","_id","description","info","userStatus","status","location","country","city","Users","users","pageSize","mappedUsers","usersFrame","UserPageAPIComponent","pageNumber","changeCurrentPage","getUsersSaga","this","isFetching","Preloader","compose","selectors","usersSelectors","getUsersDifficult","getTotalCount","getPageSize","getPortionNumber","getCurrentPage","getIsFetching","getIsRequestSendUserId","actionsUsers","followSaga","unfollowSaga","changeCurrentPageActionCreator","setPortionNumber","actionsDialogs","toDialogSaga"],"mappings":"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","file":"static/js/7.21c71db9.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../Redux/reduxStore\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {isAuth: state.auth.isAuth}\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props;\r\n        return !isAuth\r\n            ? <Redirect to={ '/login' }/>\r\n            : <Component { ...restProps as T } />\r\n    }\r\n\r\n    return connect ( mapStateToProps ) ( RedirectComponent )\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/emptyUser.80e4c874.png\";","import React, {useState} from \"react\";\r\nimport style from \"./Paginator.module.css\";\r\n\r\ntype PropsType = {\r\n    totalCount: number\r\n    currentPage: number\r\n    portionSize?: number\r\n    portionNumber: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    changePortionNumber: (portion: number) => void\r\n\r\n}\r\n\r\n\r\nconst Paginator: React.FC<PropsType> = React.memo ( ({\r\n                                                         totalCount,\r\n                                                         portionSize = 10,\r\n                                                         currentPage,\r\n                                                         onPageChanged,\r\n                                                         portionNumber,\r\n                                                         changePortionNumber\r\n                                                     }) => {\r\n\r\n    const pagesCount = Math.ceil ( totalCount / portionSize ) // pages:number\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    let pages: number[] = [];\r\n    for (let i = 1; i < pagesCount + 1; i++) {\r\n        pages = [...pages, i]\r\n    }\r\n\r\n\r\n    const filteredPages = pages.filter ( p => p >= leftPortionPageNumber && p <= rightPortionPageNumber )\r\n    const mappedPages = filteredPages.map ( (p, i) => {\r\n        return (\r\n            currentPage === p\r\n            ?<span key={ i }\r\n              className={style.activeNumber}>{ p }</span>\r\n            :<span key={ i }\r\n                   onClick={ () => {\r\n                       onPageChanged ( p )\r\n                   } }\r\n                   className={style.normalNumber }>{ p }</span>\r\n        )\r\n    })\r\n\r\n    const left = portionNumber > 1 && <span onClick={ () => changePortionNumber ( portionNumber - 1 ) }\r\n                                            className={ style.normalNumber }>{ '<<<' }</span>\r\n    const right = pagesCount > portionNumber && <span onClick={ () => changePortionNumber ( portionNumber + 1 ) }\r\n                                                      className={ style.normalNumber }>{ '>>>' }</span>\r\n    return (\r\n        <>\r\n            <div className={ style.pages }>\r\n                { left }\r\n                { mappedPages }\r\n                { right }\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n} )\r\nexport default Paginator;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__38HhQ\",\"activeNumber\":\"Paginator_activeNumber__2lXob\",\"normalNumber\":\"Paginator_normalNumber__3KHzh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersFrame\":\"UserPage_usersFrame__1ny86\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1J7Ho\",\"description\":\"User_description__1Rnc4\",\"info\":\"User_info__2slCe\",\"name\":\"User_name__2HfxK\",\"userStatus\":\"User_userStatus__fIoiG\",\"location\":\"User_location__gvlFw\",\"country\":\"User_country__31Z5J\",\"city\":\"User_city__3Pe1w\",\"photoZone\":\"User_photoZone__1NDY4\",\"followed\":\"User_followed__23RH-\",\"activeNumber\":\"User_activeNumber__25Xxb\",\"normalNumber\":\"User_normalNumber__2g2Lh\",\"addUsersButton\":\"User_addUsersButton__2FzJQ\"};","import React from \"react\";\r\nimport style from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../../common/routes/Routes\";\r\nimport {UserType} from \"../../../../Redux/usersReducer\";\r\nimport {FormattedMessage} from \"../../../common/FormattedMessage/FormattedMessage\";\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    emptyPhoto: string\r\n    isRequestSendUsersId: number []\r\n    followCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n    toDialog: (id: number) => void\r\n}\r\n\r\nconst User: React.FC<UserPropsType> = React.memo ( ({\r\n                                                        user,\r\n                                                        emptyPhoto,\r\n                                                        isRequestSendUsersId,\r\n                                                        followCallBack,\r\n                                                        unFollowCallBack,\r\n                                                        toDialog\r\n                                                    }) => {\r\n    return (\r\n        <div className={ style.user } key={ user.id }>\r\n            <div className={ style.photoZone }>\r\n                <NavLink to={ `${ PATH.PROFILE + user.id }` }>\r\n                    <img src={ user.photos.small || emptyPhoto }\r\n                                                                   alt={ `${ user.name }, ${ user.id }` }/>\r\n                </NavLink>\r\n                { user.followed\r\n                    ?\r\n                    <>\r\n                        <button disabled={ isRequestSendUsersId.some ( id => id === user.id ) }\r\n                                className={ style.followed }\r\n                                onClick={ () => {\r\n                                    unFollowCallBack ( user.id )\r\n                                } }\r\n                        >\r\n                            <FormattedMessage _id={ 'users.dialogs.unfollow' }/>\r\n                        </button>\r\n                        <button disabled={ isRequestSendUsersId.some ( id => id === user.id ) }\r\n                                className={ style.followed }\r\n                                onClick={ () => {\r\n                                    toDialog ( user.id )\r\n                                } }\r\n                        >\r\n                            <FormattedMessage _id={ 'users.dialogs.dialog' }/>\r\n                        </button>\r\n                    </>\r\n                    :\r\n                    <button disabled={ isRequestSendUsersId.some ( id => id === user.id ) } className={ style.followed }\r\n                            onClick={ () => {\r\n                                followCallBack ( user.id )\r\n                            } }><FormattedMessage _id={ 'users.dialogs.follow' }/></button> }\r\n            </div>\r\n            <div className={ style.description }>\r\n                <div className={ style.info }>\r\n                    <div className={ style.userStatus }><FormattedMessage _id={ user.status }/></div>\r\n                    <div className={ style.name }>{ user.name }</div>\r\n                </div>\r\n                <div className={ style.location }>\r\n                    <span className={ style.country }>\"user.location.country\"</span>\r\n                    <span className={ style.city }>\"user.location.city\"</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n} )\r\nexport default User;","import React from \"react\";\r\nimport style from './UserPage.module.css'\r\nimport {UserType} from \"../../../Redux/usersReducer\";\r\nimport User from \"./User/User\";\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\n\r\n\r\ntype UsersPagePropsType = {\r\n    emptyPhoto: string\r\n    users: UserType[]\r\n    totalCount: number\r\n    pageSize: number\r\n    portionNumber: number\r\n    currentPage: number\r\n    isRequestSendUsersId: number []\r\n    followCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n    toDialog: (id: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n    changePortionNumber: (portion: number) => void\r\n\r\n}\r\n\r\nconst Users: React.FC<UsersPagePropsType> = React.memo ( (props) => {\r\n\r\n    const {\r\n        users,\r\n        totalCount,\r\n        pageSize,\r\n        followCallBack,\r\n        unFollowCallBack,\r\n        onPageChanged,\r\n        emptyPhoto,\r\n        isRequestSendUsersId,\r\n        currentPage,\r\n        portionNumber,\r\n        changePortionNumber,\r\n        toDialog\r\n    } = props;\r\n\r\n\r\n\r\n\r\n    // const click = () => dispatch ( {type: GET_USERS_SAGA, payload: {pageSize, currentPage}} )\r\n\r\n    const mappedUsers = users.map ( user => {\r\n        return <User user={ user }\r\n                     emptyPhoto={ emptyPhoto }\r\n                     isRequestSendUsersId={ isRequestSendUsersId }\r\n                     followCallBack={ followCallBack }\r\n                     unFollowCallBack={ unFollowCallBack }\r\n                     toDialog={ toDialog }\r\n        />\r\n    } ) //users items mapped for page\r\n\r\n\r\n    return (<div className={ style.usersFrame }>\r\n\r\n            <Paginator changePortionNumber={ changePortionNumber } portionNumber={ portionNumber }\r\n                       totalCount={ totalCount } currentPage={ currentPage } onPageChanged={ onPageChanged }/>\r\n            { mappedUsers }\r\n        </div>\r\n    );\r\n} )\r\nexport default Users;\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\nimport {actionsUsers, InitialStateUsersType, UserType} from \"../../../Redux/usersReducer\";\r\nimport Users from \"./UsersPage\";\r\nimport emptyPhoto from '../../../images/emptyUser.png'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/WithAuthRedirect\";\r\nimport selectors from \"../../../utils/selectors\";\r\nimport {actionsDialogs} from \"../../../Redux/dialogsReducer\";\r\n\r\ntype UsersPageAPIComponentPropsType = {\r\n    users: UserType[]\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    portionNumber:number\r\n    isRequestSendUsersId: number[]\r\n    followCallBack: (id: number) => void\r\n    followUnfollowCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n    toDialog: (id: number) => void\r\n    changeCurrentPage: (currentPage: number) => void\r\n    changePortionNumber: (portion: number) => void\r\n    getUsersSaga: (pageSize: number, currentPage: number) => void\r\n}\r\nexport type UserResponseType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: { small: string | null, large: string | null }\r\n    followed: boolean\r\n}\r\nexport type UsersResponseType = {\r\n    items: Array<UserResponseType>\r\n    totalCount: number\r\n    error: string\r\n}\r\ntype MapStateToPropsType = {\r\n    users: InitialStateUsersType\r\n    totalCount: number,\r\n    pageSize: number,\r\n    portionNumber: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    isRequestSendUsersId: number[]\r\n}\r\n\r\nclass UserPageAPIComponent extends React.Component<UsersPageAPIComponentPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersSaga ( this.props.pageSize, this.props.currentPage )\r\n    }//axios request with fetching and setUsers\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.changeCurrentPage ( pageNumber )\r\n        this.props.getUsersSaga ( this.props.pageSize, pageNumber )\r\n\r\n    } //axios request with fetching and setUsers\r\n\r\n    render() {\r\n        return <>{ this.props.isFetching\r\n            ? <Preloader/>\r\n            : <Users emptyPhoto={ emptyPhoto }\r\n                     users={ this.props.users }\r\n                     totalCount={ this.props.totalCount }\r\n                     followCallBack={ this.props.followCallBack }\r\n                     unFollowCallBack={ this.props.unFollowCallBack }\r\n                     onPageChanged={ this.onPageChanged }\r\n                     currentPage={ this.props.currentPage }\r\n                     pageSize={ this.props.pageSize }\r\n                     isRequestSendUsersId={ this.props.isRequestSendUsersId }\r\n                     changePortionNumber={this.props.changePortionNumber}\r\n                     portionNumber={this.props.portionNumber}\r\n                     toDialog={this.props.toDialog}\r\n            /> }</>\r\n    }\r\n} //class container for USERS\r\n\r\nfunction mapStateToProps(state: AppStateType): MapStateToPropsType {\r\n    return {\r\n        users: selectors.usersSelectors.getUsersDifficult(state),\r\n        totalCount: selectors.usersSelectors.getTotalCount(state),\r\n        pageSize: selectors.usersSelectors.getPageSize(state),\r\n        portionNumber:selectors.usersSelectors.getPortionNumber(state),\r\n        currentPage: selectors.usersSelectors.getCurrentPage(state),\r\n        isFetching: selectors.usersSelectors.getIsFetching(state),\r\n        isRequestSendUsersId: selectors.usersSelectors.getIsRequestSendUserId(state)\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType> (\r\n    connect ( mapStateToProps, {\r\n        followCallBack: actionsUsers.followSaga,\r\n        unFollowCallBack: actionsUsers.unfollowSaga,\r\n        changeCurrentPage: actionsUsers.changeCurrentPageActionCreator,\r\n        changePortionNumber:actionsUsers.setPortionNumber,\r\n        getUsersSaga:actionsUsers.getUsersSaga,\r\n        toDialog:actionsDialogs.toDialogSaga,\r\n\r\n    } ),\r\n    withAuthRedirect\r\n)(UserPageAPIComponent)"],"sourceRoot":""}