{"version":3,"sources":["hoc/WithAuthRedirect.tsx","images/emptyUser.png","components/common/Paginator/Paginator.module.css","components/common/Paginator/consts.ts","components/common/Paginator/Paginator.tsx","components/MainWrapper/Users/UserPage.module.css","components/MainWrapper/Users/User/User.module.css","components/MainWrapper/Users/User/User.tsx","components/MainWrapper/Users/UsersPage.tsx","components/MainWrapper/Users/UserPage.container.tsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","module","exports","COLORS","Paginator","React","memo","totalCount","portionSize","currentPage","onPageChanged","portionNumber","changePortionNumber","color","pagesCount","Math","ceil","leftPortionPageNumber","rightPortionPageNumber","pages","useCallback","tempPages","i","getPages","colorStyles","style","purple","green","mappedPages","filter","p","map","className","activeNumber","onClick","normalNumber","left","right","bigRight","bigLeft","end","start","User","user","emptyPhoto","isRequestSendUsersId","followCallBack","unFollowCallBack","toDialog","photoZone","PATH","PROFILE","id","src","photos","small","alt","name","followed","disabled","some","FormattedMessage","_id","description","info","userStatus","status","location","country","city","Users","users","pageSize","mappedUsers","usersFrame","UserPageAPIComponent","pageNumber","changeCurrentPage","getUsersSaga","this","isFetching","Preloader","compose","selectors","usersSelectors","getUsersDifficult","getTotalCount","getPageSize","getPortionNumber","getCurrentPage","getIsFetching","getIsRequestSendUserId","actionsUsers","followSaga","unfollowSaga","changeCurrentPageActionCreator","setPortionNumber","actionsDialogs","toDialogSaga"],"mappings":"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","file":"static/js/6.1bf92ecd.chunk.js","sourcesContent":["import React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../Redux/reduxStore\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {isAuth: state.auth.isAuth}\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props;\r\n        return !isAuth\r\n            ? <Redirect to={ '/login' }/>\r\n            : <Component { ...restProps as T } />\r\n    }\r\n\r\n    return connect ( mapStateToProps ) ( RedirectComponent )\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/emptyUser.80e4c874.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__38HhQ\",\"activeNumber\":\"Paginator_activeNumber__2lXob\",\"normalNumber\":\"Paginator_normalNumber__3KHzh\",\"green\":\"Paginator_green__byT13\",\"purple\":\"Paginator_purple__vCwie\"};","export const COLORS = {\r\n    GREEN:'green',\r\n    PURPLE:'purple',\r\n    TRANSPARENT:'transparent'\r\n}","import React, {useCallback} from \"react\";\r\nimport style from \"./Paginator.module.css\";\r\nimport {COLORS} from \"./consts\";\r\n\r\n\r\ntype PropsType = {\r\n    totalCount: number\r\n    currentPage: number\r\n    portionSize?: number\r\n    portionNumber: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    changePortionNumber: (portion: number) => void\r\n    color?: typeof COLORS\r\n\r\n}\r\n\r\n\r\nconst Paginator: React.FC<PropsType> = React.memo ( ({\r\n                                                         totalCount,\r\n                                                         portionSize = 5,\r\n                                                         currentPage,\r\n                                                         onPageChanged,\r\n                                                         portionNumber,\r\n                                                         changePortionNumber,\r\n                                                         color = COLORS.TRANSPARENT,\r\n                                                     }) => {\r\n\r\n    const pagesCount = Math.ceil ( totalCount / (portionSize +1) ); // pages:number\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    const getPages = useCallback ( () => {\r\n        let tempPages: number[] = [];\r\n        for (let i = 1; i < pagesCount + 1; i++) {\r\n            tempPages = [...tempPages, i];\r\n        }\r\n        return tempPages;\r\n    }, [pagesCount] );\r\n\r\n    const pages = getPages ();\r\n\r\n    const colorStyles = color == COLORS.PURPLE ? style.purple : color == COLORS.GREEN ? style.green : '';\r\n\r\n    const filteredPages = pages.filter ( p => p >= leftPortionPageNumber && p <= rightPortionPageNumber );\r\n    const mappedPages = filteredPages.map ( (p, i) => {\r\n        return (\r\n            currentPage === p\r\n                ? <span key={ i }\r\n                        className={ style.activeNumber }>{ p }</span>\r\n                : <span key={ i }\r\n                        onClick={ () => {\r\n                            onPageChanged ( p );\r\n                        } }\r\n                        className={ style.normalNumber }>{ p }</span>\r\n        );\r\n    } );\r\n\r\n    const left = portionNumber > 1 &&\r\n        <span onClick={ () => changePortionNumber ( portionNumber - 1 ) }\r\n                                            className={ style.normalNumber }>{ '<' }</span>;\r\n    const right = pagesCount/portionSize > portionNumber &&\r\n        <span onClick={ () => changePortionNumber ( portionNumber + 1 ) }\r\n                                                      className={ style.normalNumber }>{ '>' }</span>;\r\n    const bigRight = portionNumber + 20 <= pagesCount / portionSize &&\r\n        <span onClick={ () => changePortionNumber ( portionNumber + 20 ) }\r\n              className={ style.normalNumber }>{ '>>' }</span>;\r\n    const bigLeft = portionNumber - 20 > 0 && <span onClick={ () => changePortionNumber ( portionNumber - 20 ) }\r\n                                                     className={ style.normalNumber }>{ '<<' }</span>;\r\n    const end = portionNumber + portionSize < pagesCount / portionSize &&\r\n        <span onClick={ () => changePortionNumber ( pagesCount / portionSize ) }\r\n              className={ style.normalNumber }>{ 'end' }</span>;\r\n    const start = portionNumber - portionSize > 0 &&\r\n        <span onClick={ () => changePortionNumber ( 1 ) }\r\n                                                           className={ style.normalNumber }>{ 'start' }</span>;\r\n    return (\r\n        <>\r\n            <div className={ `${ style.pages } ${ colorStyles }` }>\r\n                { start }\r\n                { bigLeft }\r\n                { left }\r\n                { mappedPages }\r\n                { right }\r\n                { bigRight }\r\n                { end }\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n} );\r\nexport default Paginator;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersFrame\":\"UserPage_usersFrame__1ny86\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1J7Ho\",\"description\":\"User_description__1Rnc4\",\"info\":\"User_info__2slCe\",\"name\":\"User_name__2HfxK\",\"userStatus\":\"User_userStatus__fIoiG\",\"location\":\"User_location__gvlFw\",\"country\":\"User_country__31Z5J\",\"city\":\"User_city__3Pe1w\",\"photoZone\":\"User_photoZone__1NDY4\",\"followed\":\"User_followed__23RH-\",\"activeNumber\":\"User_activeNumber__25Xxb\",\"normalNumber\":\"User_normalNumber__2g2Lh\",\"addUsersButton\":\"User_addUsersButton__2FzJQ\"};","import React from \"react\";\r\nimport style from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../../common/routes/Routes\";\r\nimport {UserType} from \"../../../../Redux/usersReducer\";\r\nimport {FormattedMessage} from \"../../../common/FormattedMessage/FormattedMessage\";\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    emptyPhoto: string\r\n    isRequestSendUsersId: number []\r\n    followCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n    toDialog: (id: number) => void\r\n}\r\n\r\nconst User: React.FC<UserPropsType> = React.memo ( ({\r\n                                                        user,\r\n                                                        emptyPhoto,\r\n                                                        isRequestSendUsersId,\r\n                                                        followCallBack,\r\n                                                        unFollowCallBack,\r\n                                                        toDialog\r\n                                                    }) => {\r\n    return (\r\n        <div className={ style.user } key={ user.id }>\r\n            <div className={ style.photoZone }>\r\n                <NavLink to={ `${ PATH.PROFILE + user.id }` }>\r\n                    <img src={ user.photos.small || emptyPhoto }\r\n                                                                   alt={ `${ user.name }, ${ user.id }` }/>\r\n                </NavLink>\r\n                { user.followed\r\n                    ?\r\n                    <>\r\n                        <button disabled={ isRequestSendUsersId.some ( id => id === user.id ) }\r\n                                className={ style.followed }\r\n                                onClick={ () => {\r\n                                    unFollowCallBack ( user.id )\r\n                                } }\r\n                        >\r\n                            <FormattedMessage _id={ 'users.dialogs.unfollow' }/>\r\n                        </button>\r\n                        <button disabled={ isRequestSendUsersId.some ( id => id === user.id ) }\r\n                                className={ style.followed }\r\n                                onClick={ () => {\r\n                                    toDialog ( user.id )\r\n                                } }\r\n                        >\r\n                            <FormattedMessage _id={ 'users.dialogs.dialog' }/>\r\n                        </button>\r\n                    </>\r\n                    :\r\n                    <button disabled={ isRequestSendUsersId.some ( id => id === user.id ) } className={ style.followed }\r\n                            onClick={ () => {\r\n                                followCallBack ( user.id )\r\n                            } }><FormattedMessage _id={ 'users.dialogs.follow' }/></button> }\r\n            </div>\r\n            <div className={ style.description }>\r\n                <div className={ style.info }>\r\n                    <div className={ style.userStatus }><FormattedMessage _id={ user.status }/></div>\r\n                    <div className={ style.name }>{ user.name }</div>\r\n                </div>\r\n                <div className={ style.location }>\r\n                    <span className={ style.country }>\"user.location.country\"</span>\r\n                    <span className={ style.city }>\"user.location.city\"</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n} )\r\nexport default User;","import React from \"react\";\r\nimport style from './UserPage.module.css'\r\nimport {UserType} from \"../../../Redux/usersReducer\";\r\nimport User from \"./User/User\";\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\n\r\n\r\ntype UsersPagePropsType = {\r\n    emptyPhoto: string\r\n    users: UserType[]\r\n    totalCount: number\r\n    pageSize: number\r\n    portionNumber: number\r\n    currentPage: number\r\n    isRequestSendUsersId: number []\r\n    followCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n    toDialog: (id: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n    changePortionNumber: (portion: number) => void\r\n\r\n}\r\n\r\nconst Users: React.FC<UsersPagePropsType> = React.memo ( (props) => {\r\n\r\n    const {\r\n        users,\r\n        totalCount,\r\n        pageSize,\r\n        followCallBack,\r\n        unFollowCallBack,\r\n        onPageChanged,\r\n        emptyPhoto,\r\n        isRequestSendUsersId,\r\n        currentPage,\r\n        portionNumber,\r\n        changePortionNumber,\r\n        toDialog\r\n    } = props;\r\n\r\n\r\n\r\n\r\n    // const click = () => dispatch ( {type: GET_USERS_SAGA, payload: {pageSize, currentPage}} )\r\n\r\n    const mappedUsers = users.map ( user => {\r\n        return <User user={ user }\r\n                     emptyPhoto={ emptyPhoto }\r\n                     isRequestSendUsersId={ isRequestSendUsersId }\r\n                     followCallBack={ followCallBack }\r\n                     unFollowCallBack={ unFollowCallBack }\r\n                     toDialog={ toDialog }\r\n        />\r\n    } ) //users items mapped for page\r\n\r\n\r\n    return (<div className={ style.usersFrame }>\r\n\r\n            <Paginator changePortionNumber={ changePortionNumber } portionNumber={ portionNumber }\r\n                       totalCount={ totalCount } currentPage={ currentPage } onPageChanged={ onPageChanged }/>\r\n            { mappedUsers }\r\n        </div>\r\n    );\r\n} )\r\nexport default Users;\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\nimport {actionsUsers, InitialStateUsersType, UserType} from \"../../../Redux/usersReducer\";\r\nimport Users from \"./UsersPage\";\r\nimport emptyPhoto from '../../../images/emptyUser.png'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/WithAuthRedirect\";\r\nimport selectors from \"../../../utils/selectors\";\r\nimport {actionsDialogs} from \"../../../Redux/dialogsReducer\";\r\n\r\ntype UsersPageAPIComponentPropsType = {\r\n    users: UserType[]\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    portionNumber:number\r\n    isRequestSendUsersId: number[]\r\n    followCallBack: (id: number) => void\r\n    followUnfollowCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n    toDialog: (id: number) => void\r\n    changeCurrentPage: (currentPage: number) => void\r\n    changePortionNumber: (portion: number) => void\r\n    getUsersSaga: (pageSize: number, currentPage: number) => void\r\n}\r\nexport type UserResponseType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: { small: string | null, large: string | null }\r\n    followed: boolean\r\n}\r\nexport type UsersResponseType = {\r\n    items: Array<UserResponseType>\r\n    totalCount: number\r\n    error: string\r\n}\r\ntype MapStateToPropsType = {\r\n    users: InitialStateUsersType\r\n    totalCount: number,\r\n    pageSize: number,\r\n    portionNumber: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    isRequestSendUsersId: number[]\r\n}\r\n\r\nclass UserPageAPIComponent extends React.Component<UsersPageAPIComponentPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersSaga ( this.props.pageSize, this.props.currentPage )\r\n    }//axios request with fetching and setUsers\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.changeCurrentPage ( pageNumber )\r\n        this.props.getUsersSaga ( this.props.pageSize, pageNumber )\r\n\r\n    } //axios request with fetching and setUsers\r\n\r\n    render() {\r\n        return <>{ this.props.isFetching\r\n            ? <Preloader/>\r\n            : <Users emptyPhoto={ emptyPhoto }\r\n                     users={ this.props.users }\r\n                     totalCount={ this.props.totalCount }\r\n                     followCallBack={ this.props.followCallBack }\r\n                     unFollowCallBack={ this.props.unFollowCallBack }\r\n                     onPageChanged={ this.onPageChanged }\r\n                     currentPage={ this.props.currentPage }\r\n                     pageSize={ this.props.pageSize }\r\n                     isRequestSendUsersId={ this.props.isRequestSendUsersId }\r\n                     changePortionNumber={this.props.changePortionNumber}\r\n                     portionNumber={this.props.portionNumber}\r\n                     toDialog={this.props.toDialog}\r\n            /> }</>\r\n    }\r\n} //class container for USERS\r\n\r\nfunction mapStateToProps(state: AppStateType): MapStateToPropsType {\r\n    return {\r\n        users: selectors.usersSelectors.getUsersDifficult(state),\r\n        totalCount: selectors.usersSelectors.getTotalCount(state),\r\n        pageSize: selectors.usersSelectors.getPageSize(state),\r\n        portionNumber:selectors.usersSelectors.getPortionNumber(state),\r\n        currentPage: selectors.usersSelectors.getCurrentPage(state),\r\n        isFetching: selectors.usersSelectors.getIsFetching(state),\r\n        isRequestSendUsersId: selectors.usersSelectors.getIsRequestSendUserId(state)\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType> (\r\n    connect ( mapStateToProps, {\r\n        followCallBack: actionsUsers.followSaga,\r\n        unFollowCallBack: actionsUsers.unfollowSaga,\r\n        changeCurrentPage: actionsUsers.changeCurrentPageActionCreator,\r\n        changePortionNumber:actionsUsers.setPortionNumber,\r\n        getUsersSaga:actionsUsers.getUsersSaga,\r\n        toDialog:actionsDialogs.toDialogSaga,\r\n\r\n    } ),\r\n    withAuthRedirect\r\n)(UserPageAPIComponent)"],"sourceRoot":""}